# Generated by Django 5.2.1 on 2025-06-30 19:02

from django.db import migrations
import hashlib


def get_user_salt(user_id):
    """Generate a consistent salt for a user based on their ID and a secret"""
    secret_component = "dineri_password_vault_salt_v1"
    salt_input = f"{user_id}_{secret_component}".encode()
    return hashlib.sha256(salt_input).digest()[:16]


def update_salts_to_shared(apps, schema_editor):
    """Update all existing entries to use shared salt per user"""
    VaultEntry = apps.get_model('passwordmanager', 'VaultEntry')
    User = apps.get_model('auth', 'User')
    
    # Get all users who have vault entries
    users_with_entries = User.objects.filter(vaultentry__isnull=False).distinct()
    
    for user in users_with_entries:
        shared_salt = get_user_salt(user.id)
        # Update all entries for this user to use the shared salt
        VaultEntry.objects.filter(user=user).update(salt=shared_salt)
        print(f"Updated salt for user {user.username} ({user.id})")


def reverse_migration(apps, schema_editor):
    """Reverse migration - cannot restore original salts, but this makes it reversible"""
    print("Warning: Cannot restore original salts. Entries will need to be re-encrypted.")


class Migration(migrations.Migration):

    dependencies = [
        ('passwordmanager', '0003_alter_vaultentry_options_and_more'),
    ]

    operations = [
        migrations.RunPython(update_salts_to_shared, reverse_migration),
    ]
